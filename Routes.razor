@using Microsoft.AspNetCore.Components.Authorization

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            @if (isAuthorized)
            {
                <RouteView RouteData="routeData" DefaultLayout="@typeof(MainLayout)" />
            }
            else
            {
                <RouteView RouteData="routeData" DefaultLayout="@typeof(LoginLayout)" />
            }
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    [Inject] private NavigationManager NavigationManager { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }

    private bool isAuthorized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Memperbaiki pemanggilan JSRuntime.InvokeAsync untuk membaca token dari localStorage
            var token = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "authToken");

            isAuthorized = !string.IsNullOrEmpty(token);

            if (!isAuthorized)
            {
                NavigationManager.NavigateTo("/login");
            }

            StateHasChanged(); // Memperbarui tampilan setelah status autentikasi diperiksa
        }
    }
}

